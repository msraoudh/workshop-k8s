name: Build, Push, and Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# permissions:
#   contents: read

env:
  REPO: frontend-s8-image
  IMAGE_NAME: frontend-s8-image
  BUILD_NUMBER: ${{github.run_number}}
  VITE_API_URL: https://example.local.com
jobs:
  # build-and-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     # # Backend image
  #     # - name: Build & Push backend
  #     #   uses: docker/build-push-action@v6
  #     #   with:
  #     #     context: ./backend
  #     #     push: true
  #     #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO }}-backend:${{ env.TAG }}
  #     #     cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO }}-backend:buildcache
  #     #     cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO }}-backend:buildcache,mode=max

  #     # Frontend image
  build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Clone Source Code
              uses: actions/checkout@v4 

           

            - name: Build Docker image
              run: docker build -t ${{ env.IMAGE_NAME }} --build-arg VITE_API_URL=${{ env.VITE_API_URL }}  -f ./frontend-app/Dockerfile

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{  secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            

            - name: Tag Docker image with specific version
              run: docker tag ${{ env.IMAGE_NAME }}  ${{  secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.BUILD_NUMBER }}
            

            - name: Push Docker image with specific version
              run: docker push ${{  secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.BUILD_NUMBER }} 

            - name: Tag Docker image with latest version
              run: docker tag ${{ env.IMAGE_NAME }}  ${{  secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

            - name: Push Docker image with latest version
              run: docker push ${{  secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest 


  deploy:
    needs: build-and-push
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout (for k8s manifests)
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Set image tags in manifests (optional)
        run: |
          # Update images to the freshly pushed tags if needed
          # Example with yq or sed; comment out if your k8s yaml already references :latest
          sed -i "s|\(image: .*/${{env.IMAGE_NAME}}:\).*|\1${{ env.BUILD_NUMBER }}|g" kubernetes-manifests/deployment-front.yaml
          

      - name: Deploy to Kubernetes
        run: |
          kubectl get all -A
          kubectl rollout status deploy/backend --timeout=120s || true
          kubectl rollout status deploy/frontend --timeout=120s || true

